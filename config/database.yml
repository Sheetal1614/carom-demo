# MySQL. Versions 5.5.8 and up are supported.
#
# Install the MySQL driver
#   gem install mysql2
#
# Ensure the MySQL gem is defined in your Gemfile
#   gem "mysql2"
#
# And be sure to use new-style password hashing:
#   https://dev.mysql.com/doc/refman/5.7/en/password-hashing.html
#
# Referencing from https://maxencemalbois.medium.com/the-ruby-on-rails-database-connections-pool-4ce1099a9e9f
#
default: &default
  adapter: mysql2
  encoding: utf8mb4
  collation: utf8mb4_unicode_ci
  database: <%= ENV.fetch("CAROM_DATABASE_NAME") %>
  username: <%= ENV.fetch("CAROM_DATABASE_USERNAME") %>
  password: <%= ENV.fetch("CAROM_DATABASE_PASSWORD") %>
  host: <%= ENV.fetch("CAROM_DATABASE_HOST") %>
  port: <%= ENV.fetch("CAROM_DATABASE_PORT") %>
  pool: <%= (ENV.fetch("RAILS_MAX_THREADS") { 10 }.to_i + (1 * 0) + 5) %> # 0 workers threads from backburner + 5 miscellaneous (maximum number of connections the pool may manage (default 5)).
  checkout_timeout: 30 #seconds (number of seconds to wait for a connection to become available before giving up and raising a timeout error (default 5 seconds).)
  idle_timeout: 20 #seconds (number of seconds that a connection will be kept unused in the pool before it is automatically disconnected (default 300 seconds).)
  reaping_frequency: 30 #seconds (frequency in seconds to periodically run the Reaper, which attempts to find and recover connections from dead threads, which can occur if a programmer forgets to close a connection at the end of a thread or a thread dies unexpectedly. Regardless of this setting, the Reaper will be invoked before every blocking wait. (Default nil, which means don't schedule the Reaper).)
  reconnect: <%= ENV.fetch("RECONNECT"){ true } %>
  variables:
    sql_mode: TRADITIONAL
  socket: /tmp/mysql.sock

development:
  <<: *default

integration:
  <<: *default

qa:
  <<: *default

production:
  <<: *default

# Warning: The database defined as "test" will be erased and
# re-generated from your development database when you run "rake".
# Do not set this db to the same as development or production.
#test:
#  <<: *default
#  database: carom_test

# As with config/credentials.yml, you never want to store sensitive information,
# like your database password, in your source code. If your source code is
# ever seen by anyone, they now have access to your database.
#
# Instead, provide the password or a full connection URL as an environment
# variable when you boot the app. For example:
#
#   DATABASE_URL="mysql2://myuser:mypass@localhost/somedatabase"
#
# If the connection URL is provided in the special DATABASE_URL environment
# variable, Rails will automatically merge its configuration values on top of
# the values provided in this file. Alternatively, you can specify a connection
# URL environment variable explicitly:
#
#   production:
#     url: <%= ENV["MY_APP_DATABASE_URL"] %>
#
# Read https://guides.rubyonrails.org/configuring.html#configuring-a-database
# for a full overview on how database connection configuration can be specified.
#
#production:
#  <<: *default
#  database: carom_production
#  username: carom
#  password: <%#= ENV["CAROM_DATABASE_PASSWORD"] %>
