# MySQL. Versions 5.5.8 and up are supported.
#
# Install the MySQL driver
#   gem install mysql2
#
# Ensure the MySQL gem is defined in your Gemfile
#   gem "mysql2"
#
# And be sure to use new-style password hashing:
#   https://dev.mysql.com/doc/refman/5.7/en/password-hashing.html
#
# Reference: https://bigbinary.com/learn-rubyonrails-book/configure-and-connect-to-database
#  pool - Maximum number of connections to database per application.
#  Defaults to 5.
#  e.g. 2 * 16 (puma) + 1 * 10 (sidekiq) = 42
#  here, 2 - puma processes, each process has 16 threads
#        1 - sidekiq process, each process has 10 threads
#  And have added 5 extra
#
default: &default
  adapter: mysql2
  encoding: utf8mb4
  collation: utf8mb4_unicode_ci
  pool: <%= ((ENV.fetch("WEB_CONCURRENCY") { 2 }.to_i * ENV.fetch("RAILS_MAX_THREADS") { 6 }.to_i) + (1 * 0) + 5) %>
  database: <%= ENV.fetch("CAROM_DATABASE_NAME") %>
  username: <%= ENV.fetch("CAROM_DATABASE_USERNAME") %>
  password: <%= ENV.fetch("CAROM_DATABASE_PASSWORD") %>
  host: <%= ENV.fetch("CAROM_DATABASE_HOST") %>
  port: <%= ENV.fetch("CAROM_DATABASE_PORT") %>
  checkout_timeout: 30 #seconds
  reconnect: <%= ENV.fetch("RECONNECT"){ true } %>
  variables:
    sql_mode: TRADITIONAL
  socket: /tmp/mysql.sock

development:
  <<: *default

integration:
  <<: *default

qa:
  <<: *default

production:
  <<: *default

# Warning: The database defined as "test" will be erased and
# re-generated from your development database when you run "rake".
# Do not set this db to the same as development or production.
#test:
#  <<: *default
#  database: carom_test

# As with config/credentials.yml, you never want to store sensitive information,
# like your database password, in your source code. If your source code is
# ever seen by anyone, they now have access to your database.
#
# Instead, provide the password or a full connection URL as an environment
# variable when you boot the app. For example:
#
#   DATABASE_URL="mysql2://myuser:mypass@localhost/somedatabase"
#
# If the connection URL is provided in the special DATABASE_URL environment
# variable, Rails will automatically merge its configuration values on top of
# the values provided in this file. Alternatively, you can specify a connection
# URL environment variable explicitly:
#
#   production:
#     url: <%= ENV["MY_APP_DATABASE_URL"] %>
#
# Read https://guides.rubyonrails.org/configuring.html#configuring-a-database
# for a full overview on how database connection configuration can be specified.
#
#production:
#  <<: *default
#  database: carom_production
#  username: carom
#  password: <%#= ENV["CAROM_DATABASE_PASSWORD"] %>
